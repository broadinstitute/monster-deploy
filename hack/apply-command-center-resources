#!/usr/bin/env bash
set -euo pipefail

declare -r SCRIPT_DIR=$(cd $(dirname ${0}) >/dev/null 2>&1 && pwd)
declare -r REPO_ROOT=$(cd $(dirname ${SCRIPT_DIR}) >/dev/null 2>&1 && pwd)

declare -r ARGO_VERSION=v2.6.1
declare -r PROMETHEUS_OPERATOR_VERSION=release-0.36

declare -ra CRDS=(
  https://raw.githubusercontent.com/argoproj/argo/${ARGO_VERSION}/manifests/base/crds/workflow-crd.yaml
  https://raw.githubusercontent.com/coreos/prometheus-operator/${PROMETHEUS_OPERATOR_VERSION}/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml
  https://raw.githubusercontent.com/coreos/prometheus-operator/${PROMETHEUS_OPERATOR_VERSION}/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
  https://raw.githubusercontent.com/coreos/prometheus-operator/${PROMETHEUS_OPERATOR_VERSION}/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml
  https://raw.githubusercontent.com/coreos/prometheus-operator/${PROMETHEUS_OPERATOR_VERSION}/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
  https://raw.githubusercontent.com/coreos/prometheus-operator/${PROMETHEUS_OPERATOR_VERSION}/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
  https://raw.githubusercontent.com/coreos/prometheus-operator/${PROMETHEUS_OPERATOR_VERSION}/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml
)

declare -ra COMMAND_CENTER_NAMESPACES=(
  cloudsql-proxy
  argo-ui
  monitoring
  clinvar
  encode
  dog-aging
)

source ${SCRIPT_DIR}/common.sh

#####
## Deploy a bundle of release definitions into the command-center cluster
## for an environment.
##
## NOTE: This assumes that fluxcd and the secrets-manager have already been
## installed into the target cluster.
#####
function install_command_center_services () {
  local -r kubeconfig=$1 env=$2 helm_dir=$3

  local -ra helm=($(configure_helm ${kubeconfig} ${helm_dir}))
  local -r sql_instance_secret=secret/dsde/monster/${env}/command-center/cloudsql/instance

  ${helm[@]} dependency update /charts/command-center
  ${helm[@]} upgrade command-center /charts/command-center \
   --namespace fluxcd \
   --install \
   --set "env=${env}" \
   --set "cloudsql.name=$(vault read -field=name ${sql_instance_secret})" \
   --set "cloudsql.project=$(vault read -field=project ${sql_instance_secret})" \
   --set "cloudsql.region=$(vault read -field=region ${sql_instance_secret})" \
   --set "argoNamespaces[0]=clinvar"
}

#####
## Entrypoint to the script.
##
## Ensures all expected Helm charts are released to the
## command-center and processing clusters within a core
## Monster environment.
#####
function main () {
  # Check args.
  if [ $# -ne 1 ]; then
    1>&2 echo Usage: ${0} '<env>'
    exit 1
  fi

  # Make sure config exists.
  local -r env=$1
  local -r env_dir=${REPO_ROOT}/environments/${env}
  if [ ! -d ${env_dir} ]; then
    1>&2 echo Error: Invalid environment "'$1'"
    exit 1
  fi

  local -r config_dir=${env_dir}/.kubeconfig
  mkdir -p ${config_dir}

  local -r helm_dir=${env_dir}/.helm
  mkdir -p ${helm_dir}

  # Push releases to the command center.
  local -r center_config=${config_dir}/command-center
  get_command_center_config ${env} ${center_config}
  apply_namespaces ${center_config} ${COMMAND_CENTER_NAMESPACES[@]}
  apply_urls ${center_config} ${CRDS[@]}
  install_command_center_services ${center_config} ${env} ${helm_dir}
}

main ${@}
