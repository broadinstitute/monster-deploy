---
{{- $project := printf "broad-dsp-monster-clingen-%s" .Values.env }}
{{- $secretName := "clinvar-key" }}
{{- $keyName := "key.json" }}
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: clinvar-secrets
spec:
  releaseName: clinvar-secrets
  targetNamespace: secrets-manager
  resetValues: true
  chart:
    repository: https://broadinstitute.github.io/datarepo-helm
    name: create-secret-manager-secret
    version: 0.0.5
  values:
    secrets:
      - secretName: {{ $secretName }}
        nameSpace: clinvar
        vals:
          - kubeSecretKey: {{ $keyName }}
            path: secret/dsde/monster/{{ .Values.env }}/command-center/service-accounts/clinvar-argo-runner
            vaultKey: key
      - secretName: slack-info
        nameSpace: clinvar
        vals:
          - kubeSecretKey: slack-url
            {{- with .Values.notification.vaultSecret }}
            path: {{ .path }}
            vaultKey: {{ .key }}
            {{- end }}
      - secretName: kafka-login
        nameSpace: clinvar
        vals:
          - kubeSecretKey: KAFKA_URL
            path: secret/dsde/monster/{{ .Values.env }}/clingen/kafka-login
            vaultKey: bootstrap_url
          - kubeSecretKey: KAFKA_USERNAME
            path: secret/dsde/monster/{{ .Values.env }}/clingen/kafka-login
            vaultKey: username
          - kubeSecretKey: KAFKA_PASSWORD
            path: secret/dsde/monster/{{ .Values.env }}/clingen/kafka-login
            vaultKey: password
---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: clinvar-orchestration
spec:
  releaseName: clinvar-orchestration
  targetNamespace: clinvar
  resetValues: true
  {{- with .Values.chart }}
  chart:
    {{- if .git }}
    git: git://github.com/databiosphere/clinvar-ingest.git
    ref: {{ .ref }}
    path: orchestration
    {{- else }}
    repository: https://databiosphere.github.io/clinvar-ingest
    name: clinvar-ingest
    version: {{ .ref }}
    {{- end }}
  {{- end }}
  {{- with .Values.chart }}
  values:
    {{- if .git }}
    {{- else }}
    version: {{ .ref }}
    {{- end}}
  {{- end}}
    volumes:
      downloadSize: 2Gi
      extractSize: 15Gi
    staging:
      gcsBucket: {{ $project }}-staging-storage
      bigquery:
        project: {{ $project }}
        datasetPrefix: monster_staging_data
        description: Dataset used by the Monster team for ingest ETL
        # 7 days in units of seconds
        expiration: '604800'
    jade:
      {{- with .Values.repo }}
      url: {{ .url }}
      dataProject: {{ .dataProject }}
      datasetName: {{ .datasetName }}
      datasetId: {{ .datasetId }}
      profileId: {{ .profileId }}
      {{- end }}
      accessKey:
        secretName: {{ $secretName }}
        secretKey: {{ $keyName }}
    serviceAccount:
      k8sName: argo-runner
      googleName: clinvar-argo-runner@broad-dsp-monster-{{ .Values.env }}.iam.gserviceaccount.com
    cron:
      enable: {{ .Values.enable }}
      {{- if .Values.schedule }}
      schedule: {{ .Values.schedule }}
      {{- end }}
    dataflow:
      project: {{ $project }}
      tmpBucketName: {{ $project }}-temp-storage
      subnetName: monster-processing-network
      workerAccount: dataflow-runner@{{ $project }}.iam.gserviceaccount.com
    notification:
      onlyOnFailure: {{ .Values.notification.onlyOnFailure }}
      slackUrl:
        secretName: slack-info
        secretKey: slack-url
    clingen:
      project: {{ $project }}
      gcsBucket: {{ $project }}-ingest-results
      kafka:
        topic: broad-dsp-clinvar
        secretName: kafka-login
