---
{{- $smokeTest := eq .Values.env "dev" }}
{{- $project := printf "broad-dsp-monster-encode-%s" .Values.env }}
{{- $secretName := "encode-key" }}
{{- $keyName := "key.json" }}
{{- $awsSecretName := "encode-aws-credentials" }}
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: encode-secrets
spec:
  releaseName: encode-secrets
  targetNamespace: secrets-manager
  resetValues: true
  chart:
    repository: https://broadinstitute.github.io/datarepo-helm
    name: create-secret-manager-secret
    version: 0.0.5
  values:
    secrets:
      - secretName: {{ $secretName }}
        nameSpace: encode
        vals:
          - kubeSecretKey: {{ $keyName }}
            path: secret/dsde/monster/{{ .Values.env }}/command-center/service-accounts/encode-argo-runner
            vaultKey: key
      - secretName: {{ $awsSecretName }}
        nameSpace: encode
        vals:
          {{- $path := printf "secret/dsde/monster/%s/processing-projects/encode/s3-downloader" .Values.env }}
          - kubeSecretKey: AWS_ACCESS_KEY_ID
            path: {{ $path }}
            vaultKey: access_key_id
          - kubeSecretKey: AWS_SECRET_ACCESS_KEY
            path: {{ $path }}
            vaultKey: secret_access_key
      - secretName: slack-oauth-token
        nameSpace: encode
        vals:
          - kubeSecretKey: oauth-token
            path: secret/dsde/monster/{{ .Values.env }}/encode/slack-notifier
            vaultKey: oauth-token
---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: encode-orchestration
spec:
  releaseName: encode-orchestration
  targetNamespace: encode
  resetValues: true
  {{- with .Values.chart }}
  chart:
    {{- if .git }}
    git: git://github.com/databiosphere/encode-ingest.git
    ref: {{ .ref }}
    path: orchestration
    {{- else }}
    repository: https://databiosphere.github.io/encode-ingest
    name: encode-ingest
    version: {{ .ref }}
    {{- end }}
  {{- end }}
  values:
    gcs:
      bucketName: {{ $project }}-staging-storage
    serviceAccount:
      k8sName: argo-runner
      googleName: encode-argo-runner@broad-dsp-monster-{{ .Values.env }}.iam.gserviceaccount.com
    cron:
      enable: {{ .Values.enable }}
      {{- if .Values.schedule }}
      schedule: {{ .Values.schedule }}
      {{- end }}
    dataflow:
      project: {{ $project }}
      tmpBucketName: {{ $project }}-temp-storage
      subnetName: monster-processing-network
      workerAccount: dataflow-runner@{{ $project }}.iam.gserviceaccount.com
    bigquery:
      stagingData:
        project: {{ $project }}
        datasetPrefix: monster_staging_data
        description: Dataset used by the Monster team for ingest ETL
        # 7 days in units of seconds
        expiration: '604800'
      jadeData:
        project: {{ .Values.repo.dataProject }}
        dataset: {{ printf "datarepo_%s" .Values.repo.datasetName }}
    aws:
      credentialsSecretName: {{ $awsSecretName }}
    notification:
      oauthToken:
        secretName: slack-oauth-token
        secretKey: oauth-token
    repo:
      {{- with .Values.repo }}
      url: {{ .url }}
      datasetId: {{ .datasetId }}
      profileId: {{ .profileId }}
      {{- end }}
      accessKey:
        secretName: {{ $secretName }}
        secretKey: {{ $keyName }}
